{"version":3,"sources":["WeatherMap/img/up.svg","WeatherMap/img/down.svg","WeatherMap/img/max.svg","WeatherMap/img/min.svg","WeatherMap/WeatherMap.js","App.js","index.js"],"names":["WeatherMap","props","useState","input","setInput","city","setCity","bool","setBool","city5Day","setCity5Day","arr","map","x","list","dayObj","hasOwnProperty","dt_txt","slice","push","newArr","Object","values","className","action","onSubmit","e","preventDefault","url","url1","fetch","then","response","json","data","catch","error","alert","window","location","reload","document","querySelector","style","display","type","value","onChange","event","target","placeholder","disabled","idx","name","weather","description","main","temp","feels_like","pressure","humidity","wind","speed","clouds","all","src","icon","alt","max","temp_max","toFixed","min","temp_min","onClick","length","up","down","days","y","id","toString","split","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.28895f1a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/up.08570c0f.svg\";","export default __webpack_public_path__ + \"static/media/down.1125861c.svg\";","export default __webpack_public_path__ + \"static/media/max.bab52f6c.svg\";","export default __webpack_public_path__ + \"static/media/min.11cf2b8a.svg\";","import React, {useState} from \"react\";\r\nimport \"./WeatherMap.css\";\r\nimport up from \"./img/up.svg\";\r\nimport down from \"./img/down.svg\";\r\nimport max from \"./img/max.svg\";\r\nimport min from \"./img/min.svg\";\r\n\r\n\r\nexport function WeatherMap(props) {\r\n    const [input,setInput] = useState(\"\");\r\n    const [city, setCity] = useState([]);\r\n    const [bool,setBool] = useState(false);\r\n    const [city5Day, setCity5Day] = useState([]);\r\n    let arr = city5Day.map(x=>x.list)[0];\r\n    let dayObj = {};\r\n    arr && arr.map(x => !dayObj.hasOwnProperty(x.dt_txt.slice(0,10)) ?\r\n        dayObj[x.dt_txt.slice(0,10)] = [x] : dayObj[x.dt_txt.slice(0,10)].push(x));\r\n\r\n    let newArr = Object.values(dayObj);\r\n\r\n    const handleChange = event => {\r\n        setInput(event.target.value);\r\n    };\r\n\r\n    const hendleSearch = (e) => {\r\n        e.preventDefault();\r\n        setBool(false);\r\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=a8e71c9932b20c4ceb0aed183e6a83bb&units=imperial`;\r\n        let url1 = `https://api.openweathermap.org/data/2.5/forecast?q=${input}&appid=a8e71c9932b20c4ceb0aed183e6a83bb`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => setCity([data]))\r\n            .catch((error) => {\r\n                alert(\"Please enter a valid country or city name...!\");\r\n                window.location.reload();\r\n            });\r\n        fetch(url1)\r\n            .then(response => response.json())\r\n            .then(data => setCity5Day([data]));\r\n        document.querySelector(\".day5Forecast\").style.display = \"none\";\r\n        setInput(\"\");\r\n    };\r\n\r\n   const handle5Forecast = () => {\r\n        city.length && setBool(!bool);\r\n    };\r\n\r\n    // console.log(newArr);\r\n\r\n   return(\r\n        <div className={\"weatherMap\"}>\r\n            <h1>Weather map forecast</h1>\r\n            <form action=\"\" onSubmit={hendleSearch} className={\"form\"}>\r\n                <input type=\"text\" value={input} onChange={handleChange} placeholder={\"Country name\"}/>\r\n                <button disabled={!input} type=\"submit\">\r\n                    Search\r\n                </button>\r\n            </form>\r\n            <div className={\"weatherMap__main\"}>\r\n                {\r\n                    city && city.map((x,idx)=>\r\n                        <div key={idx}  className={\"weatherMap__main-div\"}>\r\n                            <div className={\"weatherMap__main-left\"}>\r\n                                <h2>{x.name}</h2>\r\n                                <p className={\"capLetter\"}>Description: {x.weather[0].description}</p>\r\n                                <p>Temperature: {x.main.temp}</p>\r\n                                <p>Feels like: {x.main.feels_like}</p>\r\n                                <p>Pressure: {x.main.pressure}</p>\r\n                                <p>Humidity: {x.main.humidity}</p>\r\n                                <p>Wind: {x.wind.speed}</p>\r\n                                <p>Clouds: {x.clouds.all}</p>\r\n                            </div>\r\n                            <div className={\"weatherMap__main-right\"}>\r\n                                <img src={`http://openweathermap.org/img/wn/${x.weather[0].icon}@2x.png`} alt=\"\"/>\r\n                                <h3 className={\"capLetter\"}>Main: {x.weather[0].main}</h3>\r\n                                <div className={\"max-min\"}>\r\n                                    <div className={\"max\"}>\r\n                                        <img src={max} alt=\"\"/>\r\n                                        <span>{(((x.main.temp_max) - 32) * 5/9).toFixed()}</span>\r\n                                    </div>\r\n                                    <div className={\"min\"}>\r\n                                        <img src={min} alt=\"\"/>\r\n                                        <span>{(((x.main.temp_min) - 32) * 5/9).toFixed()}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n            <button onClick={handle5Forecast} className={\"seeMore\"}>\r\n                See 5 day â€¨forecast\r\n                <img src={bool ? up : down} alt=\"\"/>\r\n            </button>\r\n            <div className={\"day5Forecast\"} style={{display: bool ? \"block\" :\"none\"}}>\r\n                {\r\n                    newArr && newArr.map((days,idx) =>\r\n                        <div key={idx} className={\"day5Forecast-divs\"}>\r\n                            <div className={\"border\"}>\r\n                                <h2>{days[0].dt_txt.slice(0,10)}</h2>\r\n                            </div>\r\n                            <div className={\"hr\"}><hr/></div>\r\n                            <div className={\"border\"}>\r\n                                {days.map((y,id)=>\r\n                                    <div key={id} className={\"day5Forecast-divs-cart\"}>\r\n                                        <img className={\"icon\"} src={`http://openweathermap.org/img/wn/${y.weather[0].icon}@2x.png`} alt=\"\"/>\r\n                                        <p className={\"p1\"}>{y.dt_txt.slice(11)}</p>\r\n                                        <h3>Main: {y.weather[0].main}</h3>\r\n                                        <p>Wind speed: {y.wind.speed}</p>\r\n                                        <div className={\"max-min\"}>\r\n                                            <div className={\"max\"}>\r\n                                                <img src={max} alt=\"\"/>\r\n                                                <span>{(y.main.temp_max.toString().split(\".\")[0])}</span>\r\n                                            </div>\r\n                                            <div className={\"min\"}>\r\n                                                <img src={min} alt=\"\"/>\r\n                                                <span>{y.main.temp_min.toString().split(\".\")[0]}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\nimport {WeatherMap} from \"./WeatherMap/WeatherMap\";\n\nfunction App() {\n  return (\n    <div>\n      <WeatherMap/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}